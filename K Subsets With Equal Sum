import java.io.*;
import java.util.*;

public class Main {
public static void solution(int arr[] , int i ,int k ,int numOfsets ,int[] subsetSum , ArrayList<ArrayList<Integer>> ans ){
  if(i==arr.length){
	  if(numOfsets==k){
		  boolean flag = false;
		  for(int j =1;j<subsetSum.length;j++){
			  if(subsetSum[j-1] == subsetSum[j]){
				  flag = true; 
				  
			  }
			  else{
				  flag = false;
				  return;
			   }
		  }
		  if(flag== true){
		    for(ArrayList sets : ans){
			 System.out.print(sets+ " ");
	  }
	  System.out.println();
		  }
		  
  }
  return;
  }
   for(int j =0;j<ans.size();j++){
       if(ans.get(j).size()>0){
		   ans.get(j).add(arr[i]);
		   subsetSum[j]+= arr[i];
		   solution(arr , i+1 , k , numOfsets ,subsetSum, ans);
		   subsetSum[j]-= arr[i];
		   ans.get(j).remove(ans.get(j).size()-1);
	   }
	   else{
		   ans.get(j).add(arr[i]);
		   subsetSum[j]= arr[i];
		   solution( arr , i+1 ,k, numOfsets+1 ,subsetSum, ans);
		   subsetSum[j]= 0;
		   ans.get(j).remove(ans.get(j).size()-1);
		   break;
	   }
   }
}

	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int[] arr = new int[n];
		int sum = 0;
		for(int i =  0 ; i < arr.length; i++) {
			arr[i] = scn.nextInt();
			sum += arr[i];
		}
		int k = scn.nextInt();
		// if k is equal to 1, then whole array is your answer 
		if(k == 1) {
			System.out.print("[");
			for(int i = 0 ; i  < arr.length; i++) {
				System.out.print(arr[i] + ", ");
			}
			System.out.println("]");
			return;
		}
		//if there are more subsets than no. of elements in array or sum of all elements is not divisible by k
		if(k > n || sum % k != 0) {
			System.out.println("-1");
			return;
		}
		int[] subsetSum = new int[k];
		ArrayList<ArrayList<Integer>> ans = new ArrayList<>();
		for(int i = 0; i < k; i++) {
			ans.add(new ArrayList<>());
		}
		solution(arr,0,k,0,subsetSum,ans);
	}
	
	

}
