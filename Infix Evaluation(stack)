import java.io.*;
import java.util.*;

public class Main {


  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();
    Stack<Integer> operands = new Stack<>();
    Stack<Character> operators = new Stack<>();

    for (int i = 0; i < exp.length(); i++) {
      char ch = exp.charAt(i);
      if (ch == '(') {
        operators.push(ch);
      }
      else if ( Character.isDigit(ch)) {
        operands.push(ch - '0'); //to convert ch to int
      }
      else if (ch == ')') {
        while (operators.peek() != '(') {
          char op = operators.pop();
          int num2 = operands.pop();
          int num1 = operands.pop();

          int operationresult = operations(num1, num2, op );
          operands.push(operationresult);
        }
        operators.pop();//to pop opening bracket
      }
      else if (ch == '+' || ch == '-' || ch == '*' || ch == '/') {
          //higher priority operators are solved first
        while (operators.size() > 0 && operators.peek() != '(' && precedence(ch) <= precedence(operators.peek())) {
          char op = operators.pop();
          int num2 = operands.pop();
          int num1 = operands.pop();

          int operationresult = operations(num1, num2, op );
          operands.push(operationresult);
        }
        operators.push(ch);//operator is pushed 
      }
    }
    while (operators.size() != 0) { 
      char op = operators.pop();
      int num2 = operands.pop();
      int num1 = operands.pop();

      int operationresult = operations(num1, num2, op );
      operands.push(operationresult);

    }
    System.out.println(operands.peek());
  }
  public static int precedence(char op) {
    if (op == '+') {
      return 1;
    }
    else if (op == '-') {
      return 1;
    }
    else if (op == '*') {
      return 2;
    }
    else {
      return 2;
    }
  }

  public static int operations(int num1, int num2, char op) {
    if (op == '+') {
      return num1 + num2;
    }
    else if (op == '-') {
      return num1 - num2;
    }
    else if (op == '*') {
      return num1 * num2;
    }
    else {
      return num1 / num2;
    }
  }


}
