import java.util.*;

class Main {
    public static Scanner scn = new Scanner(System.in);

    public static class ListNode {
        int val = 0;
        ListNode next = null;

        ListNode(int val) {
            this.val = val;
        }
    }

    public static ListNode mergeKLists(ListNode[] lists) {
        ListNode merged = mergeHelper(lists,0,lists.length-1);
        return merged;
    }
    public static ListNode mergeHelper(ListNode[] lists, int i , int j){
         if(i>j) return null;
         if(i==j) return lists[i];
        int mid = i +(j-i)/2;
        ListNode l1 = mergeHelper(lists,i,mid);
        ListNode l2 = mergeHelper(lists,mid+1,j);
         
         return mergeTwoLL(l1,l2);
    }
   
   public static ListNode mergeTwoLL(ListNode l1 ,ListNode l2){
       if(l1==null) return l2;
       if(l2==null) return l1;
       if(l1.val>l2.val){
           ListNode temp = l1;
           l1 = l2;
           l2 = temp;
       }
       ListNode ans = l1;
       while(l1!=null && l2!=null){
           ListNode temp =  null;
           while(l1!=null && l1.val<=l2.val){
               temp = l1;
               l1 = l1.next;
           }
           temp.next = l2;
           ListNode swap = l1;
           l1= l2;
           l2 = swap;
       }
       return ans;
   }
    public static void printList(ListNode node) {
        while (node != null) {
            System.out.print(node.val + " ");
            node = node.next;
        }
    }

    public static ListNode createList(int n) {
        ListNode dummy = new ListNode(-1);
        ListNode prev = dummy;
        while (n-- > 0) {
            prev.next = new ListNode(scn.nextInt());
            prev = prev.next;
        }

        return dummy.next;
    }

    public static void main(String[] args) {
        int n = scn.nextInt();
        ListNode[] list = new ListNode[n];
        for (int i = 0; i < n; i++) {
            int m = scn.nextInt();
            list[i] = createList(m);
        }

        ListNode head = mergeKLists(list);
        printList(head);
    }
}
