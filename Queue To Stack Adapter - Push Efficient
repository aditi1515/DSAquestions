import java.io.*;
import java.util.*;

public class Main {

  public static class QueueToStackAdapter {
    Queue<Integer> mainQ;
    Queue<Integer> helperQ;

    public QueueToStackAdapter() {
      mainQ = new ArrayDeque<>();
      helperQ = new ArrayDeque<>();
    }

    int size() {
      return mainQ.size(); // O(1)
    }

    void push(int val) {
      mainQ.add(val);

    }

    int pop() {
      if (size() == 0) {
        System.out.println("Stack underflow");
        return -1;
      }
      else {
        while (mainQ.size() > 1) { //till one ekemenet is left we add in helper queuee from main queueue
          helperQ.add(mainQ.remove());
        }
        int val = mainQ.remove(); //capture the last element of main queue but don't add the last element since we need to pop it 

        while (helperQ.size() > 0) { //then again add all elements from helper queue to main queue
          mainQ.add(helperQ.remove());
        }

        return val; //return the captured element
      }
    }

    int top() {
      if (size() == 0) {
        System.out.println("Stack underflow");
        return -1;
      }
      else {
        while (mainQ.size() > 1) {
          helperQ.add(mainQ.remove()); //till one ekemenet is left we add in helper queuee from main queueue
        }
        int val = mainQ.remove(); //capture the last element of main queue
        helperQ.add(val); //then add last captured element in helper queue

        while (helperQ.size() > 0) {
          mainQ.add(helperQ.remove()); //then again add all elements from helper queue to main queue
        }


        return val; //return the captured element


      }
    }
  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    QueueToStackAdapter st = new QueueToStackAdapter();

    String str = br.readLine();
    while (str.equals("quit") == false) {
      if (str.startsWith("push")) {
        int val = Integer.parseInt(str.split(" ")[1]);
        st.push(val);
      } else if (str.startsWith("pop")) {
        int val = st.pop();
        if (val != -1) {
          System.out.println(val);
        }
      } else if (str.startsWith("top")) {
        int val = st.top();
        if (val != -1) {
          System.out.println(val);
        }
      } else if (str.startsWith("size")) {
        System.out.println(st.size());
      }
      str = br.readLine();
    }
  }
}
